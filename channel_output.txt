Channel { title: "萨摩的部落格", link: "https://i-meto.com", description: "掉毛中……", language: Some("zh-CN"), copyright: None, managing_editor: None, webmaster: None, pub_date: None, last_build_date: Some("Fri, 21 Feb 2020 14:46:21 +0000"), categories: [], generator: Some("https://wordpress.org/?v=5.6"), docs: None, cloud: None, rating: None, ttl: None, image: None, text_input: None, skip_hours: [], skip_days: [], items: [Item { title: Some("没事就不要玩数字货币了"), link: Some("https://i-meto.com/thanks-handshake/"), description: Some("事情发生在两天前……刚开电脑准备开始办公，看到有人给我发了 QQ 消息 寻思着公钥这种东西上 https:// [&#8230;]"), author: None, categories: [Category { name: "未分类", domain: None }], comments: None, enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=332", permalink: false }), pub_date: Some("Fri, 21 Feb 2020 14:46:21 +0000"), source: None, content: Some("\n<p>事情发生在两天前……<br>刚开电脑准备开始办公，看到有人给我发了 QQ 消息</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/84755/33/12698/114364/5e4f3931Ef0042158/919c3e26d2aa06d1.png\" alt=\"\" width=\"600\" height=\"195\"/></figure></div>\n\n\n\n<span id=\"more-332\"></span>\n\n\n\n<p>寻思着公钥这种东西上 <a href=\"https://api.github.com/users/metowolf/keys\">https://api.github.com/users/metowolf/keys</a> 都能拉，想都没想就打包了一个发过去。</p>\n\n\n\n<p>期间顺便去百度查了查 RSA 密码大厦是否坍塌……<br>应该是没有。</p>\n\n\n\n<p>随后那人回复我了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/92892/19/12769/547898/5e4fdccfE6cdc0e2a/6d27ea4f03443291.png\" alt=\"\" width=\"800\" height=\"694\"/></figure></div>\n\n\n\n<p>果然是个骗私钥的，低劣的骗术。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/101189/18/12991/15236/5e4fdddfE6dc4251b/fe1685c5836eb935.png\" alt=\"\" width=\"94\" height=\"86\"/></figure></div>\n\n\n\n<p>关掉 QQ 继续去写代码，过了一会儿我发现事情有点不大对劲。</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/89885/1/12919/66597/5e4fdfc9E5190748f/2923cabcb6624545.png\" alt=\"\" width=\"800\"/></figure>\n\n\n\n<p>去羊毛群看了一下，果然是有个<a href=\"https://www.namebase.io/airdrop\">活动</a>。<br>大意就是有个 Handshake 很有钱，他决定送所有 GitHub 粉丝数超过 15 并且上传过 SSH key 的猴子们价值 1000 刀的<s>香蕉</s> HNS，<s>先到先得，数量……</s></p>\n\n\n\n<p>看了下流程挺复杂的，我又想起开头那个人。</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/101975/29/13041/453904/5e4fe2bcEffe14567/9042142ee4618c59.png\" alt=\"\" width=\"800\"/></figure>\n\n\n\n<p>果然没理我……</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/95510/30/12981/195254/5e4fecd7Ede32a855/e9c31e0fcf11d0f5.png\" alt=\"\" width=\"86\" height=\"98\"/></figure></div>\n\n\n\n<p>最后决定自己动手。</p>\n\n\n\n<p>按照官方的说明，去下了个工具，运行一下。<br>整个界面全是英文和字母没看懂，估计是在挖矿吧。不是很懂搞数字货币的这帮人为啥对乱码这么感兴趣。</p>\n\n\n\n<figure class=\"wp-block-image size-large is-resized\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/92202/14/12772/657670/5e4fe69bEce04fc48/edae57dc15d44efd.png\" alt=\"\" width=\"800\"/></figure>\n\n\n\n<p>最后会算出一大串的英文，然后再去他那个全是英文的网站提交一下，会弹出个弹窗，告诉你钱要等 16 小时到账。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/92972/24/12934/309506/5e4fe72bEfe6accad/29acbf8205ccc66b.png\" alt=\"\" width=\"344\" height=\"295\"/></figure></div>\n\n\n\n<p>第二天起床，发现钱到账了。</p>\n\n\n\n<p>官网提供了 <a href=\"https://www.namebase.io/sell\">HNS 兑换成 BTC 的通道</a>，刚好以前混<a href=\"https://www.biyong.sg/\">币用</a>的那段时间搞了个钱包，把地址填了进去。</p>\n\n\n\n<p>提交后，又需要等一段时间的确认……<br>感觉币圈大佬们的日常生活应该就是边泡茶边等交易确认吧。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/87532/3/12859/191494/5e4fe919E1eff9cc9/1c790ea03a6d320e.png\" alt=\"\" width=\"132\" height=\"119\"/></figure></div>\n\n\n\n<p>过了一阵子再上去看，钱包到账了，加上以前攒的余额，今年应该能把苹果全家桶搞齐了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/86959/40/12968/126763/5e4feaadE2effb56d/8086ea12ad93d550.png\" alt=\"\"/></figure></div>\n\n\n\n<p>最后去气一下开头那个人。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/106407/20/12879/90633/5e4feb69Ef72a1935/32a1471012d6ec9a.png\" alt=\"\"/></figure></div>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/92401/23/13031/15661/5e4fe30aE352b205b/345bb4f59006a17a.png\" alt=\"\" width=\"86\" height=\"98\"/></figure></div>\n"), extensions: {}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("用图床看视频是什么体验"), link: Some("https://i-meto.com/hlsjs-upimg-wrapper/"), description: Some("在家隔离闲着无聊，就在想现在网上的公开图床这么多，为何不试试把视频放到上面去呢。 很容易想到限制，一个 5 分 [&#8230;]"), author: None, categories: [Category { name: "技术", domain: None }], comments: None, enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=324", permalink: false }), pub_date: Some("Sun, 16 Feb 2020 15:16:22 +0000"), source: None, content: Some("\n<p>在家隔离闲着无聊，就在想现在网上的公开图床这么多，为何不试试把视频放到上面去呢。</p>\n\n\n\n<span id=\"more-324\"></span>\n\n\n\n<p>很容易想到限制，一个 5 分钟左右的视频大小都在 30M 以上，而大部分图床的上传限制都在 5M 以内。况且视频也没法改个后缀名上传上去啊，还有文件头校验呢！</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/100607/36/12527/32311/5e49637dEc0693ac4/330b5bc622127053.png\" alt=\"\" width=\"83\" height=\"80\"/></figure></div>\n\n\n\n<p>不过这也难不倒我，查了查百度发现可以利用 ffmpeg 把视频的每一帧都提取出来。随便网上下了一个 MV，按照教程输入命令回车后，命令行开始疯狂刷屏。等提取完所有文件后，再拿去 sm.ms 上传一下……</p>\n\n\n\n<p>咦？我磁盘满了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/90895/6/12335/47506/5e496362E83452831/6b92221ff1b0e320.png\" alt=\"\" width=\"105\" height=\"102\"/></figure></div>\n\n\n\n<p>换个思路，其实没有必要把每一帧画面都传上去。比如可以每一秒传一帧，这样 5 分钟的视频也就 300 张图片就足够了。如果画面看起来不够流畅可以提示让观众眨眼补帧。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/108122/6/6158/169437/5e496347E03e26a6d/0b16008f64d29fc5.png\" alt=\"\" width=\"479\" height=\"303\"/><figcaption>第一版页面</figcaption></figure></div>\n\n\n\n<p>发到 QQ 群里让朋友试用了一下，果然被吐槽了。不太行啊。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/108951/28/6211/25618/5e496326E6c2d6541/9328e015c1d6827b.png\" alt=\"\" width=\"93\" height=\"94\"/></figure></div>\n\n\n\n<p>睡了一觉，到贴吧瞎逛，发现有几个老哥在发图种。保存后顺手举报了。</p>\n\n\n\n<p>然后从图种中得到灵感，试了下把保存的几个图种图片拿去图床上传，果然成功了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/92769/31/12476/226379/5e49630aE80845260/249dec9dbb162887.png\" alt=\"\" width=\"121\" height=\"121\"/></figure></div>\n\n\n\n<p>那么思路就很清晰了，拿一张正常的图片和视频拼接在一起，然后上传到图床去，在播放的时候再把图片去掉。</p>\n\n\n\n<p>有群友提醒我整个视频体积太大，可以考虑分割成 HLS 格式。</p>\n\n\n\n<p>现在只差一个程序员了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/98758/13/12532/259881/5e4962b3Edcf6510c/2ca95bdb3f5a773d.png\" alt=\"\" width=\"604\" height=\"435\"/></figure></div>\n\n\n\n<p>去外包网发了一个需求，睡一觉起来果然写好了。</p>\n\n\n\n<p>感觉还不错。</p>\n\n\n\n<p>项目涉及几百万的利润，不会开源的～</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter size-large is-resized\"><img loading=\"lazy\" src=\"https://img11.360buyimg.com/img/jfs/t1/88000/20/12515/64410/5e4962ccEd9a20a0f/a42b740189002190.png\" alt=\"\" width=\"109\" height=\"93\"/></figure></div>\n\n\n\n<p>以下是成品（对 iOS 做了屏蔽，<s>防止被我妈看到</s>）</p>\n\n\n\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/plyr@latest/dist/plyr.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/plyr@latest/dist/plyr.min.js\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/hls.js@latest\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/hlsjs-upimg-wrapper@latest\"></script>\n<video id=\"video\" data-url=\"https://p1.pstatp.com/origin/138af000001ddd92064c6\" />\n<script>\nif (Hls.isSupported()) {\n    const video = document.getElementById(\"video\")\n    const player = new Plyr(video)\n    const wrapper = new HlsjsUpimgWrapper(Hls)\n    const hls = wrapper.createPlayer({}, {\n        offset: 2999\n    })\n    hls.loadSource(video.dataset.url)\n    hls.attachMedia(video)\n}\n</script>\n"), extensions: {}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("Elpass 密码管理器体验"), link: Some("https://i-meto.com/elpass-review/"), description: Some("2018 年初购入了第一台 MacBook Pro 后，就顺势订阅了当时最流行的密码管理器 1Password [&#8230;]"), author: None, categories: [Category { name: "测评", domain: None }, Category { name: "1password", domain: None }, Category { name: "elpass", domain: None }], comments: Some("https://i-meto.com/elpass-review/#respond"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=293", permalink: false }), pub_date: Some("Sat, 14 Dec 2019 16:03:33 +0000"), source: None, content: Some("\n<p>2018 年初购入了第一台 MacBook Pro 后，就顺势订阅了当时最流行的密码管理器 1Password，就此告别了一个密码走天下的习惯。</p>\n\n\n\n<p>前几天，老刘在 Twitter 上发布了 <a href=\"https://elpass.app/\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"Elpass（在新窗口打开）\">Elpass</a> —— 一款 1Password 的替代品，早在 9 月初就听闻其自动填充的便利性，因此第一时间就下载下来体验。</p>\n\n\n\n<span id=\"more-293\"></span>\n\n\n\n<figure class=\"wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter\"><div class=\"wp-block-embed__wrapper\">\n<blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"zh\" dir=\"ltr\">我开发的密码管理器 Elpass 发布啦 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f973.png\" alt=\"🥳\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" />：<a href=\"https://t.co/PwTmykm2Dn\">https://t.co/PwTmykm2Dn</a><br><br>第一个版本，有问题还请多包涵 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f64f.png\" alt=\"🙏\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>&mdash; Yachen Liu (@Blankwonder) <a href=\"https://twitter.com/Blankwonder/status/1205023784417161217?ref_src=twsrc%5Etfw\">December 12, 2019</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n</div></figure>\n\n\n\n<p>Elpass 的界面布局和 1Password 差不多，并且提供了方便的数据迁移工具，1Password 老用户几乎可以无缝切换。</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://ae01.alicdn.com/kf/Hfd83730d19674a3bbc002770e147f346N.png\" alt=\"\"/><figcaption>1Password</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://ae01.alicdn.com/kf/H3004d5191a1a4789bde732e652ad11f8y.png\" alt=\"\"/><figcaption>Elpass</figcaption></figure>\n\n\n\n<p>在类型上，Elpass 提供了 5 类数据的支持，分别是登陆信息、银行卡、身份证件、安全备忘、密码。与 1Password 相比少了软件许可，对于经常重装大版本 macOS 的我，还是希望后期能够支持这个功能的，手动管理一堆付费应用的序列号还是挺麻烦的。</p>\n\n\n\n<p>Elpass 最大的亮点应该是原生 App 的自动填充了，经过配置后，绝大部分应用都能够很好地支持，在体验上基本接近钥匙串的体验。一大遗憾就是还没法支持 Electron 类应用，不过这类应用未来应该会越来越少了吧。</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://ae01.alicdn.com/kf/H25c8f74a743b4352a1238375d2f90aeam.png\" alt=\"\"/><figcaption>Elpass &#8211; 原生 App 自动填充</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image size-large\"><img src=\"https://ae01.alicdn.com/kf/H99a230fbbf444612ba51746150d874a5K.png\" alt=\"\"/><figcaption>Apple 钥匙串 &#8211; 自动填充</figcaption></figure>\n\n\n\n<p>和 1Password 不同，Elpass 不依靠自己的云服务，而是将用户数据加密托管在了用户自己的 iCloud Drive、Dropbox 上，并以此实现了数据同步。</p>\n\n\n\n<p>使用几次下来，同步的速度特别快，再也没有出现类似 1Password 同步延迟好几分钟的问题。</p>\n\n\n\n<p>最后。</p>\n\n\n\n<p>虽然仅仅是一个迭代十几次的版本，Elpass 基本可以让我抛弃掉使用了快两年的 1Password，期待未来能够发展得越来越好。</p>\n"), extensions: {"wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/elpass-review/feed/"), attrs: {}, children: {} }]}, "slash": {"comments": [Extension { name: "slash:comments", value: Some("0"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("在 Nginx 上支持 HTTP/3"), link: Some("https://i-meto.com/nginx-http3/"), description: Some("HTTP/3 是下一代的 HTTP 协议版本，在 HTTP/3 中将弃用 TCP 而改用基于 UDP 的 QU [&#8230;]"), author: None, categories: [Category { name: "未分类", domain: None }, Category { name: "docker", domain: None }, Category { name: "http/3", domain: None }, Category { name: "nginx", domain: None }, Category { name: "quiche", domain: None }], comments: Some("https://i-meto.com/nginx-http3/#comments"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=276", permalink: false }), pub_date: Some("Sun, 10 Nov 2019 10:44:18 +0000"), source: None, content: Some("\n<p class=\"has-drop-cap\">HTTP/3 是下一代的 HTTP 协议版本，在 HTTP/3 中将弃用 TCP 而改用基于 UDP 的 QUIC 协议进行传输。QUIC 则是 Google 开发的实验性传输层网络协议，目前已经在 Google、YouTube 等自家产品上广泛应用。</p>\n\n\n\n<span id=\"more-276\"></span>\n\n\n\n<p>Nginx 在 2019 年 3 月 21 日公布了 1.17.x 版本的路线图，其中谈到了支持 QUIC 和 HTTP/3 的计划。时隔半年，已经迭代到 1.17.5 的版本还未见到 HTTP/3 的身影，倒是 CloudFlare 开源了 QUIC 的实现 quiche，使得 Nginx 提前支持 HTTP/3 成为了可能。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/80127/14/14594/104212/5dc0d611Ed7878f06/1b0fdc77c01ee831.png\" alt=\"\"/><figcaption>cloudflare/quiche</figcaption></figure>\n\n\n\n<p>根据 <a href=\"https://github.com/cloudflare/quiche/tree/master/extras/nginx\">quiche 的文档</a>，需要下载源码和 Nginx 一同编译，而因为需要 BoringSSL 以及 quiche 开发语言的不同，在编译 Nginx 所需要的环境基础上，还需要 cmake、rust、cargo、golang 等一系列工具的支持。</p>\n\n\n\n<p>经过一些努力，目前我维护的 <a href=\"https://github.com/metowolf/docker-nginx\">docker-nginx</a> 项目 1.17.5 版本已经默认编译 quiche，同时当前博客所依赖的 <a href=\"https://github.com/metowolf/docker-lemp\">Docker LEMP</a> 编排示例也同步更新了。</p>\n\n\n\n<p>这里提供一个简单的 HTTP/3 演示，前提条件是你已经开启了 TLSv1.3 的支持，具体的配置改动如下：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>server {\n  listen       80;\n  listen       443 ssl http2;\n  // 开启 QUIC 的监听\n  listen       443 quic;\n\n  server_name  localhost;\n\n  root   /var/www/default;\n  index  index.php;\n\n  ssl_certificate /etc/nginx/ssl/localhost.crt;\n  ssl_certificate_key /etc/nginx/ssl/localhost.key;\n\n  ssl_protocols TLSv1.2 TLSv1.3;\n  ssl_ciphers TLS-CHACHA20-POLY1305-SHA256:TLS-AES-256-GCM-SHA384:TLS-AES-128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256;\n  ssl_prefer_server_ciphers on;\n  ssl_early_data on;\n\n  // 添加头部提示\n  add_header alt-svc \'h3-23=\":443\"; ma=86400\';\n\n  location / {\n    try_files $uri $uri/ /index.php?$query_string;\n  }\n\n  location ~ \\.php$ {\n    fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    fastcgi_pass php-fpm:9000;\n    fastcgi_index index.php;\n    include fastcgi_params;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    fastcgi_param PATH_INFO $fastcgi_path_info;\n  }\n}</code></pre>\n\n\n\n<p>虽然目前除了 Chrome Canary 之外还没有什么客户端支持这个特性，不过 HTTP/3 迟早会定稿并普及开，就当提前尝鲜了，希望 nginx 官方能够早点把 HTTP/3 模块造好。</p>\n\n\n\n<hr class=\"wp-block-separator\"/>\n\n\n\n<h4>参考文章</h4>\n\n\n\n<ul><li><a rel=\"noreferrer noopener\" aria-label=\"（在新窗口打开）\" href=\"https://www.nginx.com/blog/nginx-1-16-1-17-released/\" target=\"_blank\">Introducing NGINX 1.16 and 1.17</a></li><li><a rel=\"noreferrer noopener\" aria-label=\"HTTP/3 Check（在新窗口打开）\" href=\"https://http3check.net/\" target=\"_blank\">HTTP/3 Check</a></li><li><a href=\"https://kn007.net/topics/try-http3/\">小试HTTP3 &#8211; kn007</a></li></ul>\n"), extensions: {"wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/nginx-http3/feed/"), attrs: {}, children: {} }]}, "slash": {"comments": [Extension { name: "slash:comments", value: Some("5"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("OnePlus Pro 7 晒图"), link: Some("https://i-meto.com/oneplus-pro-7/"), description: Some("碎碎念的 OnePlus Pro 7 终于是到手了。 虽然没能赶上 5G 的时代，但这块不讲究的 90Hz 无 [&#8230;]"), author: None, categories: [Category { name: "测评", domain: None }], comments: Some("https://i-meto.com/oneplus-pro-7/#comments"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=258", permalink: false }), pub_date: Some("Wed, 22 May 2019 15:51:54 +0000"), source: None, content: Some("\n<p>碎碎念的 OnePlus Pro 7 终于是到手了。</p>\n\n\n\n<p>虽然没能赶上 5G 的时代，但这块不讲究的 90Hz 无留海无挖孔 2k 流体屏着实让我挖藕了一把。</p>\n\n\n\n<p>不说了，晒图就对了。</p>\n\n\n\n<span id=\"more-258\"></span>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t28090/191/1621805492/941712/2480d7af/5ce56c24N0709a43a.jpg\" alt=\"\"/><figcaption>包装正面</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/53739/31/681/1558463/5ce56c45E1d1c6b5a/442ea7e234cc4d87.jpg\" alt=\"\"/><figcaption>包装背面</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/40945/2/4904/837460/5ce56c64Ed902b92f/bcb41ea77f792715.jpg\" alt=\"\"/><figcaption>OnePlus 7 Pro</figcaption></figure>\n\n\n\n<p>整个机器采用双曲面玻璃，拿起来有点分量，不过手感特别好。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t28408/347/1555506259/951293/1fa962b4/5ce56d1eN60fb1fce.jpg\" alt=\"\"/><figcaption>宣传包装</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t29833/83/1569632738/972777/e577a244/5ce56d59N5cc90692.jpg\" alt=\"\"/><figcaption>显示效果</figcaption></figure>\n\n\n\n<p>90Hz 的屏幕刷新率，给人的感觉就是滑动特别跟手。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/79952/34/200/1584483/5ce56df0Ecd8a770d/fcd4a9cc40f2b5bc.jpg\" alt=\"\"/><figcaption>腾讯视频</figcaption></figure>\n\n\n\n<p>在腾讯视频中试播了几首 MV，双扬声器的外放效果有很明显的立体声效果。全画幅的屏幕没有任何刘海、挖孔的遮挡，有很强的沉浸感。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/46408/17/635/1663032/5ce56e9dEd94280de/3c15e2ff66b0eb96.jpg\" alt=\"\"/><figcaption>Netflix</figcaption></figure>\n\n\n\n<p>使用 Netflix 播放具有 HDR10 的视频，在 OLED 的加成下，有很出色的视觉体验。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/42280/38/4847/1791170/5ce56fa1E7120a12c/5625cd8b91f57a17.jpg\" alt=\"\"/><figcaption>附件</figcaption></figure>\n\n\n\n<p>值得一提的是，包装里的附件袋还送了一张贴纸，浓浓的苹果风味。</p>\n\n\n\n<p>I like it!</p>\n"), extensions: {"wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/oneplus-pro-7/feed/"), attrs: {}, children: {} }]}, "slash": {"comments": [Extension { name: "slash:comments", value: Some("10"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("Mac mini 升级 NVMe SSD"), link: Some("https://i-meto.com/mac-mini-update-nvme-ssd/"), description: Some("最近从车群淘了一条 SM961 256G，感觉 1RMB/G 的价格还不错，正好给老爷机更新一下配置。 目前正 [&#8230;]"), author: None, categories: [Category { name: "测评", domain: None }], comments: Some("https://i-meto.com/mac-mini-update-nvme-ssd/#comments"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=251", permalink: false }), pub_date: Some("Tue, 07 May 2019 16:25:44 +0000"), source: None, content: Some("\n<p>最近从车群淘了一条 SM961 256G，感觉 1RMB/G 的价格还不错，正好给老爷机更新一下配置。</p>\n\n\n\n<span id=\"more-251\"></span>\n\n\n\n<p>目前正在使用的开发机是 Mac mini (Late 2014) 内存 8G 版本的。买来的时候选配了一条 128G 的三星 MZ-JPV1280/0A3，可以算是苹果定制版的 SM951。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/37320/33/9799/1697463/5cd1a724E0d6e2dc1/a30ade5742547b88.png\" alt=\"\"/><figcaption>原装三星 MZ-JPV1280/0A3</figcaption></figure>\n\n\n\n<p>上一代的 SM951 是 AHCI 通道，而新的 SM961 走的则是纯正的 NVMe 通道，性能会快一大截。根据 Fixit 的说法，苹果在 2017 年的 macOS high Sierra 已经取消了第三方 NVMe SSD 的限制。既然有升级空间，何乐而不为？</p>\n\n\n\n<p>这里还要注意一个坑，苹果定制的 SSD 在接口上针脚不同于标准的 M.2 M-key，因此需要去深水宝另外淘一个十几块的转换器。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/35134/33/9981/1124176/5cd1a92cE99058e8a/c6870bdbae3ae426.png\" alt=\"\"/><figcaption>不知名转接卡</figcaption></figure>\n\n\n\n<p>从 PCB 板上就能看出这有多坑爹，就改变了一下排列顺序而已。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/56602/40/40/1547605/5cd1a9b2E34eb3623/0f08eb5998808cbf.png\" alt=\"\"/><figcaption>SM961、转接卡合影</figcaption></figure>\n\n\n\n<p>拿硬质物体撬开 Mac mini 后盖，用 T6 螺丝刀卸下 6 颗安全螺丝。开盖后就能看到原装 SSD ，直接替换即可。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/42307/28/4199/1599278/5cd1ab67E7620b3e1/3358c541f0067b5b.png\" alt=\"\"/><figcaption>SM961 安装效果图</figcaption></figure>\n\n\n\n<p>由于我的 Mac mini 出厂就预装了 SSD，所以已经自带了 PCIe 连接线了。如果是乞丐版机型，需要自行安装连接线，可以到深水宝里购买一条插上去。</p>\n\n\n\n<p>重新装完 Mojave 系统后，上跑分对比。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/38408/6/6623/3664241/5cd1b02bE140e33ee/8339dd0d580c4783.png\" alt=\"\"/><figcaption>原 SM951 跑分 / 新 SM961 跑分</figcaption></figure>\n\n\n\n<p>由于 Mac mini 2014 只支持 PCIe x2，因此 1GB/s 已经是瓶颈速度了。</p>\n\n\n\n<p>然而。。。整体使用没感觉变快多少，就当升级了一下储存空间吧（<img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f62d.png\" alt=\"😭\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 有点浪费性能</p>\n\n\n\n<p>PS：使用了两天，感觉 SM961 发热比较严重，是否加散热片就看个人意愿了。</p>\n"), extensions: {"wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/mac-mini-update-nvme-ssd/feed/"), attrs: {}, children: {} }]}, "slash": {"comments": [Extension { name: "slash:comments", value: Some("12"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("我是如何在广州考到驾照"), link: Some("https://i-meto.com/driving-test/"), description: Some("前言 大概从 2018 年年初就一直计划着考一本驾照，从 2018 年 6 月在广州驾校报名，前前后后花了近一 [&#8230;]"), author: None, categories: [Category { name: "未分类", domain: None }], comments: Some("https://i-meto.com/driving-test/#respond"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=215", permalink: false }), pub_date: Some("Mon, 15 Apr 2019 14:48:29 +0000"), source: None, content: Some("\n<h3>前言</h3>\n\n\n\n<p>大概从 2018 年年初就一直计划着考一本驾照，从 2018 年 6 月在广州驾校报名，前前后后花了近一年的时间终于顺利毕业，在这里写写考驾照期间的一些历程。</p>\n\n\n\n<span id=\"more-215\"></span>\n\n\n\n<h3>报名</h3>\n\n\n\n<p>由于我是在省外读大学，因此面临两种选择，一是在寒暑假回家乡考，二是在读书期间直接到当地的驾校报名考试。考虑到家乡小县城存在各种「吃拿卡要」现象，因此决定在广州报考。</p>\n\n\n\n<p>挑驾校的时候发现有不少低价的「互联网驾校」平台（例如猪兼强等），这类平台大都是和几所传统驾校合作，直接分配学员到他们的场地去培训。在知乎上看评价褒贬不一，同时还搜到不少学员维权的新闻，感觉不是很靠谱。</p>\n\n\n\n<p>经过多方对比，最后选择了「广州市粤安汽车驾驶员培训有限公司」，并在如约学车上报名了 C2 车型。</p>\n\n\n\n<h3>签合同</h3>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.04.16，报名后第二天，驾校的客服就主动打电话来联系，并派车接送我到总校去签约合同。</p></blockquote>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img20.360buyimg.com/img/jfs/t1/28048/38/14182/3485526/5cb46dbdEbc47f1e3/763b9bbf02c47fb5.jpg\" alt=\"\"/><figcaption>合同</figcaption></figure>\n\n\n\n<p>我选择的套餐是 5380 的 C1 无忧班，一次性收费免所有考试、补考、补训费用，之所以改选 C1 是因为 C2 班足足贵出 1000 元 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f31d.png\" alt=\"🌝\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /></p>\n\n\n\n<p>（PS：考完后觉得血亏，当初应该去报经济班的）</p>\n\n\n\n<p>获得了以下物品：</p>\n\n\n\n<ul><li>广州市机动车驾驶员培训协议</li><li>广州市粤安汽车驾驶员培训有限公司专用收据</li></ul>\n\n\n\n<p>失去了以下物品</p>\n\n\n\n<ul><li>培训费首期款 3500 元</li></ul>\n\n\n\n<h3>准备资料</h3>\n\n\n\n<p>交完钱就去到工人医院体检，项目很简单，就是测测色盲，看看手指是否健全而已。</p>\n\n\n\n<p>然后去派出所办所谓的居(暂)住证，将回执和体检单交回驾校。接下去就开始等交管所资料受理了。</p>\n\n\n\n<p>获得以下物品：</p>\n\n\n\n<ul><li>广东省工人医院驾驶员体检结论单</li><li>广州市居住证办理回执</li></ul>\n\n\n\n<p>失去以下物品：</p>\n\n\n\n<ul><li>广东省工人医院驾驶员体检结论单（上交驾校）</li><li>广州市居住证办理回执（上交驾校）</li><li>体检费 30 元</li></ul>\n\n\n\n<h3>科目一理论课</h3>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.05.29，收到交管所的流水号，报名成功。</p><p></p></blockquote>\n\n\n\n<p>驾校通知周末去学习科目一理论课</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.06.06，参加理论培训。</p></blockquote>\n\n\n\n<p>上午上两个小时的理论课，中午在驾校里吃完午饭，下午在模拟器上学习方向盘和挂挡，看安全教育视频，上下课都要人脸识别打卡，要花一整天的时间。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/32706/27/11368/1370449/5cb47237E0dae9930/85574fd43b6b1c90.jpg\" alt=\"\"/><figcaption>科目一理论培训</figcaption></figure>\n\n\n\n<p>学习结束后，获得了以下物品</p>\n\n\n\n<ul><li>《广州市机动车驾驶学员理论培训课程教材》</li><li>《广州市机动车驾驶学员理论培训科目一、科目三模拟考试练习题库》</li><li>学员 IC 卡</li><li>科目一约考微信群</li></ul>\n\n\n\n<h3>科目一</h3>\n\n\n\n<p>由于暑假需要去企业实习，鸽了三个月才回到学校，马上在群里预约科目一考试。</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.09.23，收到短信，广州市化龙科目一考场预约成功</p></blockquote>\n\n\n\n<p>考试前三天下载了个「驾考宝典」，把 1334 道题目从头到尾刷了一遍，模拟了四场都及格就直接去考试了。</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.09.26，开始科目一考试</p></blockquote>\n\n\n\n<p>粤安在科目一的时候会派 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f68d.png\" alt=\"🚍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 大巴车在 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f687.png\" alt=\"🚇\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 大学城北地铁站接送。上车后将蓝色的学员 IC 卡上交给驾校，换取学员证。</p>\n\n\n\n<p>到考场后直接上到三楼机房分批考科目一，有一次现场补考机会。当时鼠标点得太快，不小心连错了两题，慌得一比。</p>\n\n\n\n<p>考试结束后，回到考场外等候的 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f68d.png\" alt=\"🚍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 大巴车，将成绩反馈给司机。五个工作日后，驾校工作人员会通知补交尾款，拉进科目二微信约考群。这样，科目一就算考完了。</p>\n\n\n\n<p>获得以下物品：</p>\n\n\n\n<ul><li>科目一考试成绩：98 分</li><li>学员证</li><li>进入科目二约考群</li></ul>\n\n\n\n<p>失去以下物品：</p>\n\n\n\n<ul><li>学员 IC 卡</li><li>培训费尾款 1880 元</li></ul>\n\n\n\n<h3>科目二</h3>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.12.17，联系科目二教练开始练车</p></blockquote>\n\n\n\n<p>科目二考的是倒车入库、测方停车、曲线行驶、直角转弯、半坡起步等五项。</p>\n\n\n\n<p>据说后续会增加 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/1f6e3.png\" alt=\"🛣\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 高速取卡等，变成 9 选 5？？</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.12.24，收到短信，广州市化龙科目二考场预约成功</p></blockquote>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.12.26，熟悉考场，踩点</p></blockquote>\n\n\n\n<p>考试前一天，和学员们一起到考场跑了两圈模拟。</p>\n\n\n\n<p>化龙考场新开不久，车道上的标线都非常清晰，只要找准点位都很容易将车对正。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/37192/22/1966/564630/5cb47e89Ecff221fc/79d83933a3aad068.png\" alt=\"\"/><figcaption>科目二化龙考场</figcaption></figure>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2018.12.27，开始科目二考试</p></blockquote>\n\n\n\n<p>考试前，驾校会统一派中巴车送学员到考场。</p>\n\n\n\n<p>进了候考大厅后就开始等着摇号分配考试车道</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img1.360buyimg.com/img/jfs/t1/36369/13/1939/1279328/5cb4808bEc9c15590/22d174779eb9ed1c.png\" alt=\"\"/><figcaption>等待摇号</figcaption></figure>\n\n\n\n<p>在教练圈里普遍称呼 17-18 道是「死亡三角」，因为这两个考试车道的曲线行驶和右转弯挨得特别近，因此挂在这上面的人特别多。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img12.360buyimg.com/img/jfs/t1/31547/2/11374/1236870/5cb482edE65ad8e46/58523c9ab875fb26.png\" alt=\"\"/><figcaption>「死亡三角」</figcaption></figure>\n\n\n\n<p>怕什么来什么，我正好被摇到这个所谓的「死亡三角赛道」，只好硬着头皮上了。</p>\n\n\n\n<p>由于是新的考场，科目二的考试全程都是一人一车一道，没有安全员坐在副驾驶位，整个过程轻松很多。</p>\n\n\n\n<p>第一遍小心翼翼地用极慢的速度爬完全程，全程没有任何语音提示，过完半坡起步后，心想没有提示我压线应该过了吧。结果冲过终点线后，系统突然来了句：<strong>考试已取消</strong>。</p>\n\n\n\n<p>问了引车员，说是系统断线了，让我重新考一次。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/33301/25/3276/36147/5cb48551Ecdcd27c2/125a676116ddfe3d.jpg\" alt=\"\"/></figure>\n\n\n\n<p>于是当第一次模（踩到）拟（狗屎）了，第二次跑同样的车道果然不慌了。直接满分通过。</p>\n\n\n\n<p>获得以下物品：</p>\n\n\n\n<ul><li>科目二考试成绩：100 分</li><li>进入科目三约考群</li></ul>\n\n\n\n<h3>科目三</h3>\n\n\n\n<p>考完科二后已经快到寒假，于是又鸽了两个月。</p>\n\n\n\n<p>三月初的时候看到约考群里各种传出消息将要进行驾考改革，慌忙约了四月初的科目三。</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2019.03.21，收到短信，广州岑村科目三展茂考场预约成功</p></blockquote>\n\n\n\n<p>科目三又称路考，主要考的是夜间灯光、转弯、超车、变道、换档、掉头、直线行驶等。需要掌握的东西更多，实际路面的状况也复杂多变。</p>\n\n\n\n<p>广州科目三一般有华观路、广汕路、化龙路、展茂路这四条。展茂路通常被称为五星级考场，因为这条路几乎没有车流量，路线笔直，没有交通横叉。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://img10.360buyimg.com/img/jfs/t1/36998/23/3766/337740/5cb98d92Ebbb20454/2e25b1a4072118de.png\" alt=\"\"/></figure></div>\n\n\n\n<p>展茂路又分成三条：展茂东、展茂南、展茂中，通常会在考试前一天随机抽签。由于我预约的考试日期是星期一，所以在上周五晚就能查到实际的考试路线。</p>\n\n\n\n<p>考试前一天的上午和教练到展茂东路去绕了三圈，熟悉了各个路段的考试项目和全程的路线。</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2019.04.01，科目三道路驾驶技能考试</p></blockquote>\n\n\n\n<p>上午下了点小雨，我是分到了下午 3 点场的。可能前面考生太拖时间了，我硬生生从下午 3 点等到了 5 点半才上车。</p>\n\n\n\n<p>每个考试车由一个安全员带三个考生，考生轮流考试，一共有两次机会，挂了就马上安排补考。</p>\n\n\n\n<p>很不幸，我前面的两个考生都挂掉了。</p>\n\n\n\n<ul><li>考生 A 第 1 次：靠边停车距离边线大于 50cm</li><li>考生 A 第 2 次：错过掉头路口</li><li>考生 B 第 1 次：路口右转不观察左侧，危险驾驶被踩停</li><li>考生 B 第 2 次：1 挡加到 2 挡时挂到 4 挡</li></ul>\n\n\n\n<p>吸取了其它人的教训，慢悠悠地逛完一圈回来，满分通过。由于考试时间太晚，没法去参加科目四联考，只能隔 10 天再约考了。</p>\n\n\n\n<p>获得以下物品：</p>\n\n\n\n<ul><li>科目三考试成绩：100 分</li><li>进入毕业福利群</li></ul>\n\n\n\n<h3>科目四</h3>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2019.04.04，收到短信，广州化龙安全文明考场预约成功</p></blockquote>\n\n\n\n<p>科目四和科目一的考试流程几乎是相同的，只不过科目四的题目会更困难一些，增加了多选题和大量非常识性问题。</p>\n\n\n\n<p>考前两天把「驾考宝典」里 1240 道题目刷了一遍，全真模拟了 4 次，平均达到 97 分。</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2019.04.15，开始广州化龙安全文明考试</p></blockquote>\n\n\n\n<p>科目四和科目三一样都没有统一接送，一大早就起床赶地铁等公交。</p>\n\n\n\n<p>到了考场后先是填写驾驶证邮寄信息，集体宣誓 <img src=\"https://s.w.org/images/core/emoji/13.0.1/72x72/270a-1f3fb.png\" alt=\"✊🏻\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> 后，就进了机房。</p>\n\n\n\n<p>科目四一共是 40 道单选和 10 道多选，只花了不到 5 分钟就交卷签名走人。</p>\n\n\n\n<p>获得以下物品：</p>\n\n\n\n<ul><li>科目四考试成绩：100 分</li></ul>\n\n\n\n<p>失去以下物品：</p>\n\n\n\n<ul><li>驾驶证邮费 15 元</li></ul>\n\n\n\n<h3>拿证</h3>\n\n\n\n<p>等 EMS 中，待更</p>\n\n\n\n<blockquote class=\"wp-block-quote\"><p>2019.04.15，交管 12123 已经能查询到电子驾驶证</p></blockquote>\n\n\n\n<h3>总结</h3>\n\n\n\n<p>总体来说，广州学车并没有遇到什么特别坑人的地方，正规的驾校基本上没有什么隐式收费。如果所有科目一次性通过，考场预约一切顺利的话，大概 3 个月左右就能拿证了。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img12.360buyimg.com/img/jfs/t1/14733/30/15541/36427/5cb499e2E7d76ef4e/f2e1de33e32fa14e.png\" alt=\"\"/><figcaption>考试成绩</figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img14.360buyimg.com/img/jfs/t1/34942/15/2049/85235/5cb496fdEf06e5386/c85bd26bca64b061.png\" alt=\"\"/><figcaption>12123 官网</figcaption></figure>\n\n\n\n<p>虽然现阶段还没有买车的欲望，但驾照迟早都要考，不如趁着还没改革尽早拿证吧，工作后可能就很难挤出练车的时间了。</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://p.pstatp.com/origin/ff62000063da4cac06e2\" alt=\"\"/></figure></div>\n"), extensions: {"slash": {"comments": [Extension { name: "slash:comments", value: Some("0"), attrs: {}, children: {} }]}, "wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/driving-test/feed/"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("密码保护：IPIP.net 地址库格式分析"), link: Some("https://i-meto.com/ipdb-database/"), description: Some("无法提供摘要。这是一篇受保护的文章。"), author: None, categories: [Category { name: "技术", domain: None }], comments: Some("https://i-meto.com/ipdb-database/#respond"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=188", permalink: false }), pub_date: Some("Tue, 19 Mar 2019 15:52:52 +0000"), source: None, content: Some("<form action=\"https://i-meto.com/wp-login.php?action=postpass\" class=\"post-password-form\" method=\"post\">\n<p>这是一篇受密码保护的文章，您需要提供访问密码：</p>\n<p><label for=\"pwbox-188\">密码： <input name=\"post_password\" id=\"pwbox-188\" type=\"password\" size=\"20\" /></label> <input type=\"submit\" name=\"Submit\" value=\"提交\" /></p>\n</form>\n"), extensions: {"wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/ipdb-database/feed/"), attrs: {}, children: {} }]}, "slash": {"comments": [Extension { name: "slash:comments", value: Some("0"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("从零开始写一个代理"), link: Some("https://i-meto.com/pipe-demo/"), description: Some("在一些网络管控严格的企业，我们访问互联网的流量通常会被安全部门拦截审查，因此诞生了许多基于混淆、加密流量原理的 [&#8230;]"), author: None, categories: [Category { name: "技术", domain: None }, Category { name: "安全", domain: None }, Category { name: "网络", domain: None }], comments: Some("https://i-meto.com/pipe-demo/#respond"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=164", permalink: false }), pub_date: Some("Sat, 09 Mar 2019 15:24:49 +0000"), source: None, content: Some("\n<p>在一些网络管控严格的企业，我们访问互联网的流量通常会被安全部门拦截审查，因此诞生了许多基于混淆、加密流量原理的代理工具，为了更深层地了解代理的工作原理，本文来研究一下如何从零写一个自己的代理工具。</p>\n\n\n\n<p>本文只是提供一个造轮子的思路，目前市面上的代理工具和协议已经相当完善，请自行搜索和使用。</p>\n\n\n\n<span id=\"more-164\"></span>\n\n\n\n<h2>socks5</h2>\n\n\n\n<p>socks 是一种网络传输协议，我们先在企业外架设一个 socks 服务端，而后在企业内通过设置 socks 代理访问其它网页。</p>\n\n\n\n<p>目前 socks 最新的协议版本是 5，然而 socks5 协议全部采用明文传输数据，防火墙只需要稍加分析即可作出拦截。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://ae01.alicdn.com/kf/HTB1Bk3HK3DqK1RjSZSy761xEVXa4.png\" alt=\"\"/></figure>\n\n\n\n<p>那么思路很简单了，我们在用户侧增加一个加密端，在服务器增加一个解密端，那么防火墙便无法识别流量内容。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://ae01.alicdn.com/kf/HTB1mqUTK4TpK1RjSZFM762G_VXan.png\" alt=\"\"/></figure>\n\n\n\n<p>手敲一个 socks5 server 得不偿失，因此我们将 socks5 放到服务端，客户端部分一旦接受到请求就直接加密转发到服务端，由服务端解密后直接丢给 socks5，我们要造的轮子就只相当于一条管道罢了。</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>组件</td><td>监听端口</td><td>远程端口</td><td>作用</td></tr><tr><td>client</td><td>(192.168.1.2)<br>127.0.0.1:1080</td><td>192.168.1.1:8838</td><td>加密用户流量<br>解密远程流量</td></tr><tr><td>server</td><td>(192.168.1.1)<br>0.0.0.0:8838</td><td>(192.168.1.1)<br>127.0.0.1:8080</td><td>解密用户流量<br>加密远程流量</td></tr><tr><td>socks5</td><td>(192.168.1.1)<br>127.0.0.1:8080</td><td>互联网</td><td>提供 socks5 服务</td></tr></tbody></table>\n\n\n\n<h2 id=\"mce_17\">加密</h2>\n\n\n\n<p>加密部分我们采用对称密钥加密算法，需要在 client 和 server 端都配置好相同的密钥串。</p>\n\n\n\n<p>加密算法采用 aes-256-gcm，定义加密的数据包格式为：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>[nonce][encrypted data][data tag]</code></pre>\n\n\n\n<p>nonce 是每次随机生成的 16 byte 字符串，为的是防止同一个数据包在相同的密钥加密下产生相同的密文，避免 socks5 的握手特征暴露，同时 nonce 也等同于加盐操作，增加了安全性。</p>\n\n\n\n<p>为了防止攻击者通过修改密文的特定位置来间接影响明文达到主动探测的目的，我们可以在密文后附加一段 16 byte 的 tag 签名数据，防止密文被恶意篡改。</p>\n\n\n\n<p>具体原因可以参考：<a rel=\"noreferrer noopener\" aria-label=\"（在新窗口打开）\" href=\"https://blessing.studio/why-do-shadowsocks-deprecate-ota/\" target=\"_blank\">为何某协议要弃用一次性验证 (OTA)</a></p>\n\n\n\n<h2>数据帧</h2>\n\n\n\n<p>由于加密后的数据在网络中是分片进行传输的，服务端接收到的加密数据会拼接到一起无法解密，这时候我们需要规定数据帧的协议头格式，便于拆分数据包。</p>\n\n\n\n<p>参考 TCP、UDP、HTTP 等常用数据包，设计以下帧头：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>[4-byte encrypted payload length][encrypted payload]</code></pre>\n\n\n\n<p>在每段数据包的前面增加 4 个字节，表示数据包的长度。当然，这样简单的设计并没有完全隐藏特征，同时也无法防范主动探测。更进一步应该参考某协议的设计格式：</p>\n\n\n\n<pre class=\"wp-block-code\"><code>[encrypted payload length][length tag][encrypted payload][payload tag]</code></pre>\n\n\n\n<p>这里对 length 也需要做一次签名，因为攻击者可以篡改前四个字节的密文，使得在某些情况下解密后的 length 特别大，服务器就会一直等待后续的数据包进来，从而暴露特征。</p>\n\n\n\n<h2>实践</h2>\n\n\n\n<p>原理和思路讲完，下面开始造轮子。</p>\n\n\n\n<h3>socks5</h3>\n\n\n\n<p>首先搭建一个 socks5 服务端，这里选用 heroku 维护的 <a href=\"https://github.com/heroku/socksv5\">socksv5</a> 来搭建</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// socks.js\n\nconst socks = require(\'@heroku/socksv5\')\n\nvar srv = socks.createServer()\nsrv.listen(8080, \'127.0.0.1\', () => {\n  console.log(\'SOCKS server listening on port 8080\')\n})\n\nsrv.useAuth(socks.auth.None())</code></pre>\n\n\n\n<p>运行 <code>node socks.js</code> 后，使用 <code>curl</code> 命令进行测试</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ curl -x socks5://127.0.0.1:8080 ip.sb\n6.6.6.6</code></pre>\n\n\n\n<p>看到屏幕上显示了本机的 IP，socks5 服务端代码写完。</p>\n\n\n\n<h3>crypt</h3>\n\n\n\n<p>接下来编写加解密函数，绝大多数代码都是从<a href=\"https://nodejs.org/docs/latest-v11.x/api/crypto.html\">官方文档</a>抄的</p>\n\n\n\n<pre class=\"wp-block-code\"><code>// crypto.js\n\nconst crypto = require(\'crypto\')\nconst algorithm = \'aes-256-gcm\'\nconst password = crypto.scryptSync(\'demo\', \'salt\', 32)\n\nconst RESET = Buffer.alloc(0)\n\nconst _encrypt = (data, _nonce = null) => {\n  let nonce = _nonce || crypto.randomBytes(16)\n  let cipher = crypto.createCipheriv(algorithm, password, nonce)\n  let buf = Buffer.concat([cipher.update(data), cipher.final()])\n  let tag = cipher.getAuthTag()\n  return { nonce, buf, tag }\n}\n\nconst _decrypt = (data, tag, nonce) => {\n  try {\n    let decipher = crypto.createDecipheriv(algorithm, password, nonce)\n    decipher.setAuthTag(tag)\n    let buf = Buffer.concat([decipher.update(data), decipher.final()])\n    return buf\n  } catch (e) {\n    return RESET\n  }\n}\n\nmodule.exports.encrypt = data => {\n  let payload = _encrypt(data)\n  let nonce = payload.nonce\n  return Buffer.concat([nonce, payload.buf, payload.tag])\n}\n\nmodule.exports.decrypt = data => {\n  let nonce = data.slice(0, 16)\n  let payload = data.slice(16, -16)\n  let tag = data.slice(-16)\n  return _decrypt(payload, tag, nonce)\n}</code></pre>\n\n\n\n<p>接下来写个简单的测试文件，看看是否能正确加解密</p>\n\n\n\n<pre class=\"wp-block-code\"><code>const crypto = require(\'./crypto\')\n\nlet message = Buffer.from(\"I\'m METO, I love China!\")\nconsole.log(\'message:\', message)\n// message: &lt;Buffer 49 27 6d 20 4d 45 54 4f 2c 20 49 20 6c 6f 76 65 20 43 68 69 6e 61 21>\n\nlet enc = crypto.encrypt(message)\nconsole.log(\'encrypt:\', enc)\n// encrypt: &lt;Buffer 13 a3 bf 81 93 7e 0e 5a 17 89 ca 6a 36 90 3f 3f ed eb 78 ea 72 87 5c 6a 63 e1 26 be 84 fa 3f d6 fe a8 17 8a 88 91 ac 98 e8 92 50 e3 3e 80 80 c8 ae 6b ... 5 more bytes>\n\nlet dec = crypto.decrypt(enc)\nconsole.log(\'decrypt:\', dec)\n// decrypt: &lt;Buffer 49 27 6d 20 4d 45 54 4f 2c 20 49 20 6c 6f 76 65 20 43 68 69 6e 61 21></code></pre>\n\n\n\n<p>加密方法写完，接下来开始肝服务端。</p>\n\n\n\n<h3>server</h3>\n\n\n\n<p>服务端的逻辑很简单，创建一个本地监听 8838 端口的服务，遇到请求后创建一个 socket，紧接着连接到 socks 的 8080 端口。接下去只干两件事：</p>\n\n\n\n<ul><li>收到 client 发来的请求，解密后发给 socks</li><li>收到 socks 发来的请求，加密后发给 client</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>// server.js\n\nconst net = require(\'net\')\nconst Frap = require(\'frap\')\nconst crypto = require(\'./crypto\')\n\nlet server = net.createServer()\nserver.listen(8838, \'0.0.0.0\')\n\nserver.on(\'connection\', local => {\n\n  let frap = new Frap(local)\n\n  remote = net.connect(8080, \'127.0.0.1\')\n  frap.on(\'data\', data => {\n    data = crypto.decrypt(data)\n    remote.write(data)\n  })\n\n  remote.on(\'data\', data => {\n    data = crypto.encrypt(data)\n    frap.write(data)\n  })\n\n  frap.on(\'error\', () => {})\n  remote.on(\'error\', () => {})\n\n})</code></pre>\n\n\n\n<p>这里用到了一个 <code><a href=\"https://www.npmjs.com/package/frap\" target=\"_blank\" rel=\"noreferrer noopener\" aria-label=\"frap（在新窗口打开）\">frap</a></code> 库，这个库的作用就是自动划分 socket 流量，也就是之前说到过的数据帧帧头。</p>\n\n\n\n<h3>client</h3>\n\n\n\n<p>客户端的写法和服务端是刚好相反的，客户端也主要做两件事：</p>\n\n\n\n<ul><li>收到 client 发来的请求，加密后发给 server</li><li>收到 server 发来的请求，解密后发给 client</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>const net = require(\'net\')\nconst Frap = require(\'frap\')\nconst crypto = require(\'./crypto\')\n\nlet server = net.createServer()\nserver.listen(1080, \'127.0.0.1\')\n\nserver.on(\'connection\', local => {\n\n  remote = net.connect(8838, \'127.0.0.1\')\n\n  let frap = new Frap(remote)\n\n  local.on(\'data\', data => {\n    data = crypto.encrypt(data)\n    frap.write(data)\n  })\n\n  frap.on(\'data\', data => {\n    data = crypto.decrypt(data)\n    local.write(data)\n  })\n\n  frap.on(\'error\', () => {})\n  local.on(\'error\', () => {})\n\n})</code></pre>\n\n\n\n<p>对称美有没有。</p>\n\n\n\n<h3>运行</h3>\n\n\n\n<p>我们打开三个窗口，分别启动这三个模块</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ node socks.js\n$ node server.js\n$ node client.js</code></pre>\n\n\n\n<p>另外打开一个窗口，通过 <code>curl</code> 连接 client 代理进行测试</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ curl -x socks5://127.0.0.1:1080 ip.sb\n6.6.6.6</code></pre>\n\n\n\n<p>成功，此时我们的网络包是以如下的链路进行传输的</p>\n\n\n\n<pre class=\"wp-block-code\"><code>curl &lt;---> client (:1080) &lt;--encrypted--> server (:8838) &lt;---> socks (:8080) &lt;---> ip.sb</code></pre>\n\n\n\n<p>在实际应用中，我们只需要将 <code>server</code> 和 <code>socks</code> 部署在企业外部，本机运行 <code>client</code> 即可实现流量加密传输。</p>\n\n\n\n<p>为了验证流量的加密效果，我们可以本地使用 wireshark 软件对本地回环进行抓包。</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img1.360buyimg.com/img/jfs/t1/26520/28/10281/260975/5c83cfaaEeaf8a71b/8e66d66f3020a337.png\" alt=\"\"/><figcaption>wireshark</figcaption></figure>\n\n\n\n<p>乱码，什么都看不出来。</p>\n\n\n\n<h3>性能</h3>\n\n\n\n<p>市面上大多数代理使用 golang 或者 C 来编写，那么本文用 Node.js 写的轮子性能到底如何呢？我们用 <code>iperf3</code> 这款测速工具来跑跑分。</p>\n\n\n\n<p>首先停掉 socks 端，空出 8080 端口，然后启动 <code>iperf3</code> 服务端</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ iperf3 -s -p 8080                         \n-----------------------------------------------------------\nServer listening on 8080\n-----------------------------------------------------------</code></pre>\n\n\n\n<p>此时我们通过 client 的 1080 端口访问，效果是等同于直接访问 8080 端口的，直接跑分！</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$ iperf3 -c 127.0.0.1 -p 1080 -t 10 -J</code></pre>\n\n\n\n<p>最后给出测试结果</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>代理工具</td><td>测试结果</td></tr><tr><td><strong>pipe (aes-256-gcm)</strong></td><td>1.68 Gbits/sec</td></tr><tr><td>某协议 (aes-256-gcm)</td><td>663 Mbits/sec</td></tr><tr><td>直连</td><td>31.4 Gbits/sec</td></tr></tbody></table>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://img1.360buyimg.com/img/jfs/t1/17009/16/10089/62808/5c83e25dE07e5c169/e77012dfcf69a174.jpg\" alt=\"\"/><figcaption>承受不住.jpg</figcaption></figure></div>\n\n\n\n<p>从结果上来看，性能倒是不用怎么关心。</p>\n\n\n\n<h2>最后</h2>\n\n\n\n<p>本文所造的轮子相当粗糙，一些错误处理和节流控制都没有实现，有感兴趣的同学可以按照本文思路自行改造。</p>\n\n\n\n<p>文章内涉及的代码均已上传到 <a href=\"https://github.com/metowolf/pipe-demo\">metowolf/pipe-demo</a></p>\n"), extensions: {"slash": {"comments": [Extension { name: "slash:comments", value: Some("0"), attrs: {}, children: {} }]}, "wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/pipe-demo/feed/"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }, Item { title: Some("谈谈开源镜像站"), link: Some("https://i-meto.com/linux-mirrors/"), description: Some("我们日常使用的操作系统、应用软件在更新的时候都需要从上游服务器拉取数据，这个所谓的上游服务器也叫做「源」。由于 [&#8230;]"), author: None, categories: [Category { name: "未分类", domain: None }, Category { name: "linux", domain: None }], comments: Some("https://i-meto.com/linux-mirrors/#respond"), enclosure: None, guid: Some(Guid { value: "https://i-meto.com/?p=147", permalink: false }), pub_date: Some("Fri, 01 Mar 2019 15:16:24 +0000"), source: None, content: Some("\n<p>我们日常使用的操作系统、应用软件在更新的时候都需要从上游服务器拉取数据，这个所谓的上游服务器也叫做「源」。由于种种原因，一些私有云平台会搭建自己的镜像站，避免因网络问题导致更新受阻，保障公司内部的机器运转正常。</p>\n\n\n\n<p>挑选一个好的镜像站非常重要，通常要从稳定性、健康度和速度三个方面来综合比较。METO 为此搭建了一个<a href=\"https://api.i-meto.com/mirrors.page\">监控平台</a>，平台使用爬虫 24 小时监控各大镜像站的连接性以及同步时效。</p>\n\n\n\n<span id=\"more-147\"></span>\n\n\n\n<h2>国内</h2>\n\n\n\n<p>在中国（除港澳台地区），<del>由于中美之间持续的贸易战导致</del>国际链路一直不太稳定，所以也出现了很多对公网开放的镜像站。大致分为两类，下面列出一些比较有代表的镜像站。</p>\n\n\n\n<p>高校开源镜像站：</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>清华大学</td><td>mirrors.tuna.tsinghua.edu.cn</td></tr><tr><td>中国科学技术大学</td><td>mirrors.ustc.edu.cn</td></tr><tr><td>上海交通大学</td><td>ftp.sjtu.edu.cn</td></tr><tr><td>上海大学</td><td>mirrors.shu.edu.cn</td></tr></tbody></table>\n\n\n\n<p>企业开源镜像站：</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>阿里云</td><td>mirrors.aliyun.com</td></tr><tr><td>腾讯云</td><td>mirrors.cloud.tencent.com</td></tr><tr><td>华为云</td><td>mirrors.huaweicloud.com</td></tr><tr><td>网易</td><td>mirrors.cn99.com</td></tr><tr><td>首都在线</td><td>mirrors.yun-idc.com</td></tr></tbody></table>\n\n\n\n<h2>国外</h2>\n\n\n\n<p>国外（境外）的镜像站则大致可以分为三类。</p>\n\n\n\n<p>高校开源镜像站：</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>The Chinese University of Hong Kong</td><td>ftp.cuhk.edu.hk</td></tr><tr><td>元智大學</td><td>ftp.yzu.edu.tw</td></tr><tr><td>Massachusetts Institute of Technology</td><td>mirrors.mit.edu</td></tr></tbody></table>\n\n\n\n<p>云服务商开源镜像站：</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>Digital Ocean</td><td>mirrors.digitalocean.com</td></tr><tr><td>Linode</td><td>mirrors.linode.com</td></tr><tr><td>Cat Networks</td><td>mirrors.cat.net</td></tr></tbody></table>\n\n\n\n<p>公益开源镜像站：</p>\n\n\n\n<table class=\"wp-block-table\"><tbody><tr><td>Kernel ORG</td><td>mirrors.kernel.org</td></tr><tr><td>Yandex</td><td>mirror.yandex.ru</td></tr></tbody></table>\n\n\n\n<h2>评测</h2>\n\n\n\n<p>更新时间：2019-03-01</p>\n\n\n\n<p>由于更新时效性，推荐大家在「镜像源监控平台」查看详细结果。<a href=\"https://api.i-meto.com/mirrors.page\">https://api.i-meto.com/mirrors.page</a></p>\n\n\n\n<p><strong>最稳定且覆盖全面的镜像站：</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/28911/9/8771/36823/5c7948f9Ed6c9a7d9/be925cd98be4dc21.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirrors.tuna.tsinghua.edu.cn/\" target=\"_blank\">http://mirrors.tuna.tsinghua.edu.cn/</a></figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img12.360buyimg.com/img/jfs/t1/15800/34/8749/29908/5c79493eEb670294e/7466136f10555dd0.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirror.xtom.com.hk/\" target=\"_blank\">http://mirror.xtom.com.hk/</a></figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img11.360buyimg.com/img/jfs/t1/17303/12/8805/29696/5c794977E6385ea7d/a697016c6047532d.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirrors.cat.net/\" target=\"_blank\">http://mirrors.cat.net/</a></figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img20.360buyimg.com/img/jfs/t1/11626/15/9567/29616/5c7949a6Ee816ebef/adb719b7407071e6.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirror.yandex.ru/\" target=\"_blank\">http://mirror.yandex.ru/</a></figcaption></figure>\n\n\n\n<p><strong>最不用心的镜像站：</strong></p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img30.360buyimg.com/img/jfs/t1/29491/19/8784/29673/5c794a04Ede118320/83faf36783f3e2e8.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirrors.sohu.com/\" target=\"_blank\">http://mirrors.sohu.com/</a></figcaption></figure>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://img12.360buyimg.com/img/jfs/t1/11246/27/9634/30056/5c794a46Ee7eacb1a/95d10aae38aa80ef.png\" alt=\"\"/><figcaption><a rel=\"noreferrer noopener\" href=\"http://mirrors.ctyun.cn/\" target=\"_blank\">http://mirrors.ctyun.cn/</a></figcaption></figure>\n\n\n\n<p></p>\n"), extensions: {"slash": {"comments": [Extension { name: "slash:comments", value: Some("0"), attrs: {}, children: {} }]}, "wfw": {"commentRss": [Extension { name: "wfw:commentRss", value: Some("https://i-meto.com/linux-mirrors/feed/"), attrs: {}, children: {} }]}}, itunes_ext: None, dublin_core_ext: Some(DublinCoreExtension { contributors: [], coverages: [], creators: ["i@i-meto.com"], dates: [], descriptions: [], formats: [], identifiers: [], languages: [], publishers: [], relations: [], rights: [], sources: [], subjects: [], titles: [], types: [] }) }], extensions: {"atom": {"link": [Extension { name: "atom:link", value: None, attrs: {"type": "application/rss+xml", "href": "https://i-meto.com/feed/", "rel": "self"}, children: {} }]}}, itunes_ext: None, dublin_core_ext: None, syndication_ext: Some(SyndicationExtension { period: HOURLY, frequency: 1, base: "1970-01-01T00:00+00:00" }), namespaces: {"atom": "http://www.w3.org/2005/Atom", "slash": "http://purl.org/rss/1.0/modules/slash/", "content": "http://purl.org/rss/1.0/modules/content/", "sy": "http://purl.org/rss/1.0/modules/syndication/", "dc": "http://purl.org/dc/elements/1.1/", "wfw": "http://wellformedweb.org/CommentAPI/"} }